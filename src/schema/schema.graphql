type Query {
  "List of students"
  students: [Student!]!
  "Search student by Id"
  student(id: ID!): Student!
  "List of courses"
  courses: [Course!]!
  "Search course by id"
  course(id: ID!): Course!
}

# type Mutation {
#   addCourse(course: CourseInput): Course!
#   modifyCourse(course: CourseInput): Course!
#   deleteCourse(id: ID!): Course!
# }

type Student {
  id: ID!
  name: String!
  email: String!
  website: String
  courses: [Course!]!
}

type Course {
  id: ID!
  title: String!
  description: String!
  clases: Int!
  time: Float!
  logo: String!
  level: Nivel!
  path: String!
  teacher: String!
  students: [Student]
  reviews: [Review!]!
}

enum Nivel {
  ALL
  BEGINNER
  INTERMEDIATE
  SENIOR
}

type Review {
  id: ID!
  name: String!
  points: Float!
  comments: String
}
